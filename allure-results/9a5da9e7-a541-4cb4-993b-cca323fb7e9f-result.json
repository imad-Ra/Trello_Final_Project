{"name": "test_move_list", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6C338EEA2+31554]\n\t(No symbol) [0x00007FF6C3307ED9]\n\t(No symbol) [0x00007FF6C31C872A]\n\t(No symbol) [0x00007FF6C3218434]\n\t(No symbol) [0x00007FF6C321853C]\n\t(No symbol) [0x00007FF6C325F6A7]\n\t(No symbol) [0x00007FF6C323D06F]\n\t(No symbol) [0x00007FF6C325C977]\n\t(No symbol) [0x00007FF6C323CDD3]\n\t(No symbol) [0x00007FF6C320A33B]\n\t(No symbol) [0x00007FF6C320AED1]\n\tGetHandleVerifier [0x00007FF6C3698B1D+3217341]\n\tGetHandleVerifier [0x00007FF6C36E5AE3+3532675]\n\tGetHandleVerifier [0x00007FF6C36DB0E0+3489152]\n\tGetHandleVerifier [0x00007FF6C343E776+750614]\n\t(No symbol) [0x00007FF6C331375F]\n\t(No symbol) [0x00007FF6C330EB14]\n\t(No symbol) [0x00007FF6C330ECA2]\n\t(No symbol) [0x00007FF6C32FE16F]\n\tBaseThreadInitThunk [0x00007FFA3AF9257D+29]\n\tRtlUserThreadStart [0x00007FFA3BD0AF28+40]", "trace": "self = <test_move_list_to_board.TestMoveList testMethod=test_move_list>\n\n    @allure.story(\"Move List to Another Board and Verify via UI\")\n    def test_move_list(self):\n        logging.info(\"Test Start: Move List to Another Board and Verify via UI\")\n    \n        # Act (API): Move list using API\n        response = self.api_list.move_list(self.list_to_move_id, self.target_board_id)\n    \n        # Act (UI): Navigate to target board immediately after API call\n        self.driver.get(f\"{self.config['url']}/b/{self.target_board_id}\")\n        board_page = BoardPage(self.driver)\n    \n        # Assert (API response)\n        self.assertTrue(response.ok)\n        self.assertEqual(response.status_code, 200)\n        self.assertEqual(response.data['idBoard'], self.target_board_id)\n    \n        # Assert (UI verification)\n>       self.assertTrue(board_page.wait_for_list_and_verify(self.list_to_move_name))\n\ntest\\web_and_api\\test_move_list_to_board.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlogic\\web\\board_page.py:157: in wait_for_list_and_verify\n    WebDriverWait(self._driver, 10).until(EC.presence_of_element_located((By.XPATH, self.LISTS)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"119ac9adf6490cdd861494bde8261c9d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000021737D2C720>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6C338EEA2+31554]\nE       \t(No symbol) [0x00007FF6C3307ED9]\nE       \t(No symbol) [0x00007FF6C31C872A]\nE       \t(No symbol) [0x00007FF6C3218434]\nE       \t(No symbol) [0x00007FF6C321853C]\nE       \t(No symbol) [0x00007FF6C325F6A7]\nE       \t(No symbol) [0x00007FF6C323D06F]\nE       \t(No symbol) [0x00007FF6C325C977]\nE       \t(No symbol) [0x00007FF6C323CDD3]\nE       \t(No symbol) [0x00007FF6C320A33B]\nE       \t(No symbol) [0x00007FF6C320AED1]\nE       \tGetHandleVerifier [0x00007FF6C3698B1D+3217341]\nE       \tGetHandleVerifier [0x00007FF6C36E5AE3+3532675]\nE       \tGetHandleVerifier [0x00007FF6C36DB0E0+3489152]\nE       \tGetHandleVerifier [0x00007FF6C343E776+750614]\nE       \t(No symbol) [0x00007FF6C331375F]\nE       \t(No symbol) [0x00007FF6C330EB14]\nE       \t(No symbol) [0x00007FF6C330ECA2]\nE       \t(No symbol) [0x00007FF6C32FE16F]\nE       \tBaseThreadInitThunk [0x00007FFA3AF9257D+29]\nE       \tRtlUserThreadStart [0x00007FFA3BD0AF28+40]\n\n..\\pythonProject\\.venv\\Trello_Final_Project\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "d1342957-5961-4752-8412-5d54c18bf97c-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "80d9b153-2f75-4bbe-b3ce-e1d6eff67b40-attachment.txt", "type": "text/plain"}], "start": 1723225223748, "stop": 1723225252854, "uuid": "d52c929f-0817-495e-bb62-1a88a2521ca1", "historyId": "47fa0e38fd21d0918fa3436ae6786ec9", "testCaseId": "47fa0e38fd21d0918fa3436ae6786ec9", "fullName": "test.web_and_api.test_move_list_to_board.TestMoveList#test_move_list", "labels": [{"name": "story", "value": "Move List to Another Board and Verify via UI"}, {"name": "feature", "value": "List Management"}, {"name": "parentSuite", "value": "test.web_and_api"}, {"name": "suite", "value": "test_move_list_to_board"}, {"name": "subSuite", "value": "TestMoveList"}, {"name": "host", "value": "DESKTOP-OPJ94K2"}, {"name": "thread", "value": "6408-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.web_and_api.test_move_list_to_board"}]}