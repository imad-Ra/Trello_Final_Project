{"name": "test_change_to_invalid_username", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_change_to_invalid_username.ProfileInvalidUsernameChange testMethod=test_change_to_invalid_username>\n\n    def setUp(self):\n        # Arrange\n        self.browser = BrowserWrapper()\n        self.config = ConfigProvider.load_from_file()\n        self.jira_handler = JiraHandler()\n    \n        self.driver = self.browser.get_driver(self.config['url'])\n    \n        FirstPage(self.driver).login_button_click()\n>       LoginPage(self.driver).login_flow(self.config['email'], self.config['password'])\n\ntest\\web\\test_change_to_invalid_username.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlogic\\web\\login_page.py:61: in login_flow\n    self.fill_login_password_input(password)\nlogic\\web\\login_page.py:34: in fill_login_password_input\n    WebDriverWait(self._driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"02499dfeaa7c03c0c0386e955a8b2cba\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001C1C9C2B9C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\pythonProject\\.venv\\Trello_Final_Project\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "fa9b14f4-bd41-4e16-9d08-1e9a41700ea4-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "4b196f5f-90dd-4c10-9bc4-a24c8335163a-attachment.txt", "type": "text/plain"}], "start": 1723157742001, "stop": 1723157760211, "uuid": "379ce4c6-e105-4357-833f-3ac3b592b486", "historyId": "dc0a9cd52b3898118b858a19189c6cf4", "testCaseId": "dc0a9cd52b3898118b858a19189c6cf4", "fullName": "test.web.test_change_to_invalid_username.ProfileInvalidUsernameChange#test_change_to_invalid_username", "labels": [{"name": "feature", "value": "Username invalid - test"}, {"name": "story", "value": "Change to Invalid Username"}, {"name": "parentSuite", "value": "test.web"}, {"name": "suite", "value": "test_change_to_invalid_username"}, {"name": "subSuite", "value": "ProfileInvalidUsernameChange"}, {"name": "host", "value": "DESKTOP-OPJ94K2"}, {"name": "thread", "value": "14616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.web.test_change_to_invalid_username"}]}