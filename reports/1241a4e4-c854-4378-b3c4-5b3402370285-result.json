{"name": "test_move_list", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_move_list_to_board.TestMoveList testMethod=test_move_list>\n\n    def setUp(self):\n        # Arrange\n        self.config = ConfigProvider.load_from_file()\n        self.jira_handler = JiraHandler()\n        self.api_wrapper = APIWrapper()\n        self.api_list = APIList(self.api_wrapper)\n    \n        # Load test data from config\n        self.list_to_move_id = self.config[\"List\"][\"id\"]\n        self.list_to_move_name = self.config[\"List\"][\"name\"]\n        self.original_board_id = self.config[\"Board\"][\"id\"]\n        self.target_board_id = self.config[\"Board\"][\"id2\"]\n    \n        # Set up WebDriver and login\n        self.driver = BrowserWrapper().get_driver(self.config['url'])\n        FirstPage(self.driver).click_login_button()\n>       LoginPage(self.driver).login_flow(self.config['email'], self.config['password'])\n\ntest\\web_and_api\\test_move_list_to_board.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlogic\\web\\login_page.py:61: in login_flow\n    self.fill_login_password_input(password)\nlogic\\web\\login_page.py:34: in fill_login_password_input\n    WebDriverWait(self._driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e7620d02bcfb9b0ac6c5a7569c6b441b\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000015C63156340>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\pythonProject\\.venv\\Trello_Final_Project\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "5982f180-41ef-4c70-8a58-f2af50ee9526-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "6d2f9734-a2fa-419a-8aba-23f107de4c54-attachment.txt", "type": "text/plain"}], "start": 1723238858337, "stop": 1723238880197, "uuid": "cae63ab2-3018-4423-a351-629d30a4aefb", "historyId": "47fa0e38fd21d0918fa3436ae6786ec9", "testCaseId": "47fa0e38fd21d0918fa3436ae6786ec9", "fullName": "test.web_and_api.test_move_list_to_board.TestMoveList#test_move_list", "labels": [{"name": "story", "value": "Move List to Another Board and Verify via UI"}, {"name": "feature", "value": "List Management"}, {"name": "parentSuite", "value": "test.web_and_api"}, {"name": "suite", "value": "test_move_list_to_board"}, {"name": "subSuite", "value": "TestMoveList"}, {"name": "host", "value": "DESKTOP-OPJ94K2"}, {"name": "thread", "value": "22876-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.web_and_api.test_move_list_to_board"}]}